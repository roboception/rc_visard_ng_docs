Pipeline type blaze

Parameters

The camera module on a pipeline of type "blaze" is called "rc_camera"
and is represented by the

Camera

 page in the desired pipeline in the

Web GUI

. The user can change the camera parameters there, or directly via the
REST-API (

REST-API interface

) or GigE Vision (

GigE Vision 2.0/GenICam image interface

).

Parameter overview

This module offers the following run-time parameters:

The rc_camera module's run-time parameters on a pipeline of type blaze
Name  Type  Min  Max  Default  Description  exp_auto  bool  false
true  true  Switching between auto and manual exposure (deprecated,
please use exp_control instead)  exp_auto_average_max  float64  0.0
1.0  0.5  Maximum average intensity if exp_auto is true
exp_auto_average_min  float64  0.0  1.0  0.0  Minimum average
intensity if exp_auto is true  exp_auto_mode  string  -  -  Normal
Auto-exposure mode: [Normal]  exp_control  string  -  -  Auto
Exposure control mode: [Manual, Auto]  exp_height  int32  0  960  0
Height of auto exposure region. 0 for whole image.  exp_max  float64
6.6e-05  0.018  0.018  Maximum exposure time in seconds if exp_auto is
true  exp_offset_x  int32  0  1280  0  First column of auto exposure
region  exp_offset_y  int32  0  960  0  First row of auto exposure
region  exp_value  float64  6.6e-05  0.018  0.005  Manual exposure
time in seconds if exp_auto is false  exp_width  int32  0  1280  0
Width of auto exposure region. 0 for whole image.  fps  float64  1.0
25.0  20.0  Frames per second in Hertz  gain_value  float64  0.0  18.0
0.0  Manual gain value in decibel if exp_auto is false  wb_auto  bool
false  true  true  Switching white balance on and off (only for color
camera)  wb_ratio_blue  float64  0.125  8.0  1.0  Blue to green
balance ratio if wb_auto is false (only for color camera)
wb_ratio_red  float64  0.125  8.0  1.0  Red to green balance ratio if
wb_auto is false (only for color camera)

Description of run-time parameters

Each run-time parameter is represented by a row on the Web GUI's

Camera

 page. The name in the Web GUI is given in brackets behind the
parameter name and the parameters are listed in the order they appear
in the Web GUI.

fps (FPS (Hz))

   This value is the cameras' frame rate (fps, frames per second),
   which determines the upper frequency at which depth images can be
   computed. This is also the frequency at which the

   rc_visard NG

    delivers images via GigE Vision. Reducing this frequency also
   reduces the network bandwidth required to transmit the images.

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?fps=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?fps=<value>

exp_max (Max Exposure)

   This value is the maximal exposure time in auto-exposure mode in
   seconds. The actual exposure time is adjusted automatically so that
   the images are exposed correctly. If the maximum exposure time is
   reached, but the images are still underexposed, the

   rc_visard NG

    stepwise increases the gain to increase the images' brightness.
   Limiting the exposure time is useful for avoiding or reducing
   motion blur during fast movements. However, higher gain introduces
   noise into the image. The best trade-off depends on the
   application.

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?exp_max=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?exp_max=<value>

exp_auto_average_max (Max Brightness) and exp_auto_average_min (Min
Brightness)

   The auto-exposure tries to set the exposure time and gain factor
   such that the average intensity (i.e. brightness) in the image or
   exposure region is between a maximum and a minimum. The maximum
   brightness will be used if there is no saturation, e.g. no over-
   exposure due to bright surfaces or reflections. In case of
   saturation, the exposure time and gain factor are reduced, but only
   down to the minimum brightness.

   The maximum brightness has precedence over the minimum brightness
   parameter. If the minimum brightness is larger than the maximum
   brightness, the auto-exposure always tries to make the average
   intensity equal to the maximum brightness.

   The current brightness is always shown in the status bar below the
   images.

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?<exp_auto_average_max|exp_auto_average_min>=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?<exp_auto_average_max|exp_auto_average_min>=<value>

exp_offset_x, exp_offset_y, exp_width, exp_height (Exposure Region)

   These values define a rectangular region in the left rectified
   image for limiting the area used for computing the auto exposure.
   The exposure time and gain factor of both images are chosen to
   optimally expose the defined region. This can lead to over- or
   underexposure of image parts outside the defined region. If either
   the width or height is 0, then the whole left and right images are
   considered by the auto exposure function. This is the default.

   The region is visualized in the Web GUI by a rectangle in the left
   rectified image. It can be defined using the sliders or by
   selecting it in the image after pressing the button "Select Region
   in Image".

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?<exp_offset_x|exp_offset_y|exp_width|exp_height>=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?<exp_offset_x|exp_offset_y|exp_width|exp_height>=<value>

exp_value (Exposure)

      This value is the exposure time in manual exposure mode in
      seconds. This exposure time is kept constant even if the images
      are underexposed.

      Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?exp_value=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?exp_value=<value>

gain_value (Gain (dB))

   This value is the gain factor in decibel that can be set in manual
   exposure mode. Higher gain factors reduce the required exposure
   time but introduce noise.

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?gain_value=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?gain_value=<value>

wb_auto (White Balance Auto or Manual)

   This value can be set to *true* for automatic white balancing or
   *false* for manually setting the ratio between the colors using
   "wb_ratio_red" and "wb_ratio_blue". The last automatically
   determined ratios are set into "wb_ratio_red" and "wb_ratio_blue"
   when switching automatic white balancing off. White balancing is
   without function for monochrome cameras and will not be displayed
   in the Web GUI in this case.

   Via the REST-API, this parameter can be set as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?wb_auto=<value>

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/parameters?wb_auto=<value>

wb_ratio_blue and wb_ratio_red (Blue | Green and Red | Green)

These values are used to set blue to green and red to green ratios for
manual white balance. White balancing is without function for
monochrome cameras and will not be displayed in the Web GUI in this
case.

Via the REST-API, this parameter can be set as follows.

API version 2

   PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/parameters?<wb_ratio_blue|wb_ratio_red>=<value>

API version 1 (deprecated)

   PUT http://<host>/api/v1/nodes/rc_camera/parameters?<wb_ratio_blue|wb_ratio_red>=<value>

These parameters are also available over the GenICam interface with
slightly different names and partly with different units or data types
(see

GigE Vision 2.0/GenICam image interface

).

Status values

The "rc_camera" module reports the following status values on a
pipeline of type "blaze".

The rc_camera module's status values on a pipeline of type blaze
Name  Description  baseline  Stereo baseline t in meters  color  0 for
monochrome cameras, 1 for color cameras  exp  Current exposure time in
seconds. This value is shown below the image preview in the Web GUI as
Exposure (ms).  focal  Focal length factor normalized to an image
width of 1  fps  Current frame rate of the camera images in Hertz.
This value is shown in the Web GUI below the image preview as FPS
(Hz).  gain  Current gain factor in decibel. This value is shown in
the Web GUI below the image preview as Gain (dB).  height  Height of
the camera image in pixels. This value is shown in the Web GUI below
the image preview as the second part of Resolution (px).  width  Width
of the camera image in pixels. This value is shown in the Web GUI
below the image preview as the first part of Resolution (px).

Services

The "rc_camera" module offers the following services on a pipeline of
type "blaze".

reset_defaults

   Restores and applies the default values for this module's
   parameters ("factory reset").

   Details

   This service can be called as follows.

   API version 2

      PUT http://<host>/api/v2/pipelines/<0,1,2,3>/nodes/rc_camera/services/reset_defaults

   API version 1 (deprecated)

      PUT http://<host>/api/v1/nodes/rc_camera/services/reset_defaults

   Request

   This service has no arguments.

   Response

   The definition for the response with corresponding datatypes is:

      {
        "name": "reset_defaults",
        "response": {
          "return_code": {
            "message": "string",
            "value": "int16"
          }
        }
      }
